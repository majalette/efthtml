package {	import flash.display.Sprite;	import flash.display.MovieClip;	import flash.events.KeyboardEvent;	import flash.ui.Keyboard;	import flash.events.Event;		import com.coreyoneil.collision.CollisionList;	public class Controls extends Sprite	{		private var _collisionList:CollisionList;				private static var touches:Object;		private var player1:MovieClip;		private var player2:MovieClip;		private var vie:MovieClip;		private var avance:Boolean = false;		private var recule:Boolean = false;		private var sautEnCours:Boolean = false;		private var ducking:Boolean = false;		private var blocking:Boolean = false;		private var frappePoing:Boolean = false;		private var frappePied:Boolean = false;		private var frappeUppercut:Boolean = false;		private var grav:Number = 10;		private var hauteurSaut:Number = 0;		private var envers:Boolean = false;		public function Controls(_player1:MovieClip, _player2:MovieClip, _barreDeVie:MovieClip)		{						player1 = _player1;			player2 = _player2;			vie=_barreDeVie;			_collisionList = new CollisionList(player2);			_collisionList.addItem(player1);			touches=new Object();			this.addEventListener(Event.ADDED_TO_STAGE, controlesActif);			this.addEventListener(Event.REMOVED_FROM_STAGE, controlesDesactive);		}		private function controlesActif(evt:Event):void{			player1.stage.addEventListener(KeyboardEvent.KEY_DOWN, toucheEnfoncee);			player1.stage.addEventListener(KeyboardEvent.KEY_UP, toucheRelachee);			player1.addEventListener(Event.ENTER_FRAME, action);		}				private function controlesDesactive(evt:Event):void{			player1.stage.removeEventListener(KeyboardEvent.KEY_DOWN, toucheEnfoncee);			player1.stage.removeEventListener(KeyboardEvent.KEY_UP, toucheRelachee);			player1.removeEventListener(Event.ENTER_FRAME, action);		}				private function toucheEnfoncee(pEvt:KeyboardEvent):void		{			touches[pEvt.keyCode] = true;		}		// Fonction qui est activée quand une touche du clavier est relachée		private function toucheRelachee(pEvt:KeyboardEvent):void		{			touches[pEvt.keyCode] = false;		}		function action( pEvt:Event ):void		{			//------touches DROITE et HAUT enfoncée simultanément------//									if (pEvt.target.x<player2.x){				pEvt.target.scaleX=0.4;				envers=false;			}						if (pEvt.target.x>player2.x){				pEvt.target.scaleX=-0.4;				envers=true;			}									if (touches[Keyboard.RIGHT] && touches[Keyboard.UP])			{				if (sautEnCours == false && frappeUppercut == false && blocking == false)				{					sautEnCours = true;					hauteurSaut = -55;					player1.addEventListener(Event.ENTER_FRAME, sautDiagoAvant);					player1.gotoAndStop("jumping");				}else if (touches[90])				{					if (frappePoing == false)					{						frappePoing = true;						player1.gotoAndStop("punching");						player1.addEventListener(Event.ENTER_FRAME, coupDePoing);					}				}				else if (touches[88])				{					if (frappePied == false)					{						frappePied = true;						player1.gotoAndStop("kicking");						player1.addEventListener(Event.ENTER_FRAME, coupDePied);					}				}			}			//------touches GAUCHE et HAUT enfoncée simultanément------//			else if (touches[Keyboard.LEFT] && touches[Keyboard.UP])			{				if (sautEnCours == false && frappeUppercut == false && blocking == false)				{					sautEnCours = true;					hauteurSaut = -55;					player1.addEventListener(Event.ENTER_FRAME, sautDiagoAriere);					player1.gotoAndStop("jumping");				}else if (touches[90])				{					if (frappePoing == false)					{						frappePoing = true;						player1.gotoAndStop("punching");						player1.addEventListener(Event.ENTER_FRAME, coupDePoing);					}				}				else if (touches[88])				{					if (frappePied == false)					{						frappePied = true;						player1.gotoAndStop("kicking");						player1.addEventListener(Event.ENTER_FRAME, coupDePied);					}				}			}			//------touches Z et BAS enfoncée simultanément------//			else if (touches[90] && touches[Keyboard.DOWN])			{				if (sautEnCours == false && frappeUppercut == false && avance == false && recule == false && blocking == false)					{						frappeUppercut = true;						player1.gotoAndStop("uppercut");						player1.addEventListener(Event.ENTER_FRAME, uppercut);					}			}			//------touche HAUT enfoncée------//			else if (touches[Keyboard.UP])			{				if (sautEnCours == false && frappeUppercut == false && blocking == false)				{					sautEnCours = true;					hauteurSaut = -55;					player1.addEventListener(Event.ENTER_FRAME, sautNormal);					player1.gotoAndStop("jumping");				}				else if (touches[90])				{					if (frappePoing == false)					{						frappePoing = true;						player1.gotoAndStop("punching");						player1.addEventListener(Event.ENTER_FRAME, coupDePoing);					}				}				else if (touches[88])				{					if (frappePied == false)					{						frappePied = true;						player1.gotoAndStop("kicking");						player1.addEventListener(Event.ENTER_FRAME, coupDePied);					}				}			}			//------touche BAS enfoncée------//			else if (touches[Keyboard.DOWN])			{				if (sautEnCours == false && avance == false && recule == false && frappeUppercut == false && blocking == false)				{					player1.gotoAndStop("duck_down");					player1.addEventListener(Event.ENTER_FRAME, duck);				}			}			//------touche SHIFT enfoncée------//			else if (touches[Keyboard.SHIFT])			{				if (sautEnCours == false && frappeUppercut == false && blocking == false)				{					blocking=true;					player1.gotoAndStop("blocking_on");					player1.addEventListener(Event.ENTER_FRAME, block);				}			}			//------touche DROITE enfoncée------//			else if (touches[Keyboard.RIGHT])			{				if (sautEnCours == false && recule == false && frappeUppercut == false && frappePoing == false && frappePied == false && blocking == false)				{					avance = true;										if (envers==false){						player1.gotoAndStop("walk");						player1.addEventListener(Event.ENTER_FRAME, avancer);					}if (envers==true){						player1.gotoAndStop("walkBack");						player1.addEventListener(Event.ENTER_FRAME, avancer);					}				}				if (touches[90])				{					if (frappePoing == false)					{						player1.removeEventListener(Event.ENTER_FRAME, avancer);						avance = false;						frappePoing = true;						player1.gotoAndStop("punching");						player1.addEventListener(Event.ENTER_FRAME, coupDePoing);					}				}					else if (touches[88])					{						if (frappePied == false )						{							player1.removeEventListener(Event.ENTER_FRAME, avancer);							avance = false;							frappePied = true;							player1.gotoAndStop("kicking");							player1.addEventListener(Event.ENTER_FRAME, coupDePied);						}				}			}			//------touche GAUCHE enfoncée------//			else if (touches[Keyboard.LEFT])			{				if (sautEnCours == false && frappeUppercut == false && frappePoing == false && frappePied == false && blocking == false)				{					recule = true;										if (envers==false){						player1.gotoAndStop("walkBack");						player1.addEventListener(Event.ENTER_FRAME, reculer);					}if (envers==true){						player1.gotoAndStop("walk");						player1.addEventListener(Event.ENTER_FRAME, reculer);					}									}				if (touches[90])				{					if (frappePoing == false)					{						player1.removeEventListener(Event.ENTER_FRAME, reculer);						recule=false;						frappePoing = true;						player1.gotoAndStop("punching");						player1.addEventListener(Event.ENTER_FRAME, coupDePoing);					}				}				else if (touches[88])				{					if (frappePied == false)					{						player1.removeEventListener(Event.ENTER_FRAME,reculer);						recule=false;						frappePied = true;						player1.gotoAndStop("kicking");						player1.addEventListener(Event.ENTER_FRAME, coupDePied);					}				}			}			//------touche Z enfoncée------//			else if (touches[90])			{				if (frappePoing == false && frappeUppercut == false)				{					var collisionPoing:Array = _collisionList.checkCollisions();					if(collisionPoing.length){							vie.scaleX-=0.05;							player2.gotoAndStop("being_hit_high");					}					frappePoing = true;					player1.gotoAndStop("punching");					player1.addEventListener(Event.ENTER_FRAME, coupDePoing);				}			}			//------touche X enfoncée------//			else if (touches[88])			{				if (frappePied == false && frappeUppercut == false)				{					var collisionPied:Array = _collisionList.checkCollisions();					if(collisionPied.length){							vie.scaleX-=0.1;							player2.gotoAndStop("being_hit_low");												}					frappePied = true;					player1.gotoAndStop("kicking");					player1.addEventListener(Event.ENTER_FRAME, coupDePied);				}			}		}		private function sautDiagoAvant(e:Event):void		{			e.currentTarget.y +=  hauteurSaut;			if (e.currentTarget.x < 1000 - (e.currentTarget.width/2) )			{				e.currentTarget.x +=  15;			}			hauteurSaut +=  grav;			if (e.currentTarget.y >= 625)			{				e.currentTarget.removeEventListener(Event.ENTER_FRAME, sautDiagoAvant);				sautEnCours = false;				e.currentTarget.y = 625;				e.currentTarget.gotoAndStop("stance");			}		}		private function sautDiagoAriere(e:Event):void		{			e.currentTarget.y +=  hauteurSaut;			if (e.currentTarget.x > 0 + (e.currentTarget.width/2) )			{				e.currentTarget.x -=  15;			}			hauteurSaut +=  grav;			if (e.currentTarget.y >= 625)			{				e.currentTarget.removeEventListener(Event.ENTER_FRAME, sautDiagoAriere);				sautEnCours = false;				e.currentTarget.y = 625;				e.currentTarget.gotoAndStop("stance");			}		}		private function sautNormal(e:Event):void		{			e.currentTarget.y +=  hauteurSaut;			hauteurSaut +=  grav;			if (e.currentTarget.y >= 625)			{				e.currentTarget.removeEventListener(Event.ENTER_FRAME, sautNormal);				sautEnCours = false;				e.currentTarget.y = 625;				e.currentTarget.gotoAndStop("stance");			}		}		private function duck(e:Event):void		{			if (touches[Keyboard.DOWN] == false)			{				if(frappeUppercut==true)				{					e.currentTarget.removeEventListener(Event.ENTER_FRAME, duck);				}else				{					e.currentTarget.removeEventListener(Event.ENTER_FRAME, duck);					e.currentTarget.gotoAndStop("duck_up");				}			}		}				private function block(e:Event):void		{			if (touches[Keyboard.SHIFT] == false)			{					blocking=false;					e.currentTarget.removeEventListener(Event.ENTER_FRAME, block);					e.currentTarget.gotoAndStop("blocking_off");			}		}		private function avancer(e:Event):void		{			if (sautEnCours == false && blocking == false)			{				if (e.currentTarget.x < 1000 - (e.currentTarget.width/2) )				{					e.currentTarget.x +=  8;				}				if (touches[Keyboard.RIGHT] == false)				{					e.currentTarget.removeEventListener(Event.ENTER_FRAME, avancer);					e.currentTarget.gotoAndStop("stance");					avance = false;				}			}		}		private function reculer(e:Event):void		{			if (sautEnCours == false && blocking == false)			{				if (e.currentTarget.x > 0 + (e.currentTarget.width/2) )				{					e.currentTarget.x -=  8;				}				if (touches[Keyboard.LEFT] == false)				{					e.currentTarget.removeEventListener(Event.ENTER_FRAME, reculer);					e.currentTarget.gotoAndStop("stance");					recule = false;				}			}		}		private function coupDePoing(e:Event):void		{			frappePoing = true;			if (touches[90] == false && e.currentTarget.punching == null)			{				frappePoing = false;				e.currentTarget.removeEventListener(Event.ENTER_FRAME, coupDePoing);			}		}		private function coupDePied(e:Event):void		{			frappePied = true;			if (touches[88] == false && e.currentTarget.kicking == null)			{				frappePied = false;				e.currentTarget.removeEventListener(Event.ENTER_FRAME, coupDePied);			}		}				private function uppercut(e:Event):void		{			frappeUppercut = true;			if (touches[90] == false && e.currentTarget.uppercut == null)			{				frappeUppercut = false;				e.currentTarget.removeEventListener(Event.ENTER_FRAME, uppercut);			}		}	}}